#if UNITY_ANDROID
using UnityEngine;

namespace BeaconSDK
{
	/// <summary>
	/// Android implementation of the BeaconConnector.
	/// Binds the functions implemented inside the file BeaconConnection.jslib
	/// </summary>
	public class BeaconConnectorAndroid : IBeaconConnector
	{
		private AndroidJavaObject _beaconWalletViewModel = new AndroidJavaObject("it.airgap.beaconsdk.dapp.WalletViewModel");
		private AndroidJavaObject _beaconDAppViewModel = new AndroidJavaObject("it.airgap.beaconsdk.dapp.DAppViewModel");

		public static string NativeMessage = string.Empty;

		private QRCodeView _qrCodeView;
		
		private AndroidPluginCallback _androidCallbacks = new AndroidPluginCallback();

		private BeaconMessageReceiver _messageReceiver;

		public void SetNetwork(string network, string rpc)
		{
			throw new System.NotImplementedException();

			//network = "jakartanet";
			//rpc = "https://rpc.tzkt.io/jakartanet";
			//SetNetwork(network, rpc);
		}

		public string GetActiveAccount()
		{
			string account = _beaconDAppViewModel.Call<string>("checkForActiveAccount");

			return account;
		}

		public string GetActiveAccountAddress()
		{ 
			string address = _beaconDAppViewModel.Call<string>("getActiveAccountAddress");

			return address;
		}

		public void SetQRCodeView(QRCodeView qRCodeView)
		{
			_qrCodeView = qRCodeView;
		}

		private void SetListeners(bool addListenner)
		{
			if (addListenner)
			{
				_androidCallbacks.QRPair.AddListener(CallbackToQR);
			}
			else
			{
				_androidCallbacks.QRPair.RemoveListener(CallbackToQR);
			}
		}
		public void SetBeaconMessageReceiver(BeaconMessageReceiver messageReceiver)
		{
			_messageReceiver = messageReceiver;
		}

		public void ConnectAccount()
		{
			SetListeners(true);

			_beaconDAppViewModel.Call("startBeacon");
		}

		public void DisconectAccount()
		{
			SetListeners(false);

			_beaconDAppViewModel.Call("stopBeacon");
		}

		public void PauseBeacon()
		{
			SetListeners(false);

			_beaconDAppViewModel.Call("pauseBeacon");
		}

		public void ResumeBeacon()
		{
			SetListeners(true);

			_beaconDAppViewModel.Call("resumeBeacon");
		}

		public void Pair()
		{
<<<<<<< HEAD
			_beaconDAppViewModel.Call("qrPair", _androidCallbacks);
=======
		//	_qrCodeView.SetQrCode(_beaconDAppViewModel.Call<string>("pair"));
			var handshake = _beaconDAppViewModel.Call<string>("pair");
			_messageReceiver.OnHandshakeReceived(handshake);
>>>>>>> tarek-dev
		}

		public void Unpair()
		{
			_beaconDAppViewModel.Call("reset");
		}

		public void RequestTezosPermission(string networkName = "", string networkRPC = "")
		{
			Debug.Log(_beaconDAppViewModel.Call<string>("requestTezosPermission", networkName, networkRPC));
		}

		public void RequestTezosOperation(string destination, string entryPoint = "default", string arg = null, ulong amount = 0, string networkName = "", string networkRPC = "")
		{
			Debug.Log(_beaconDAppViewModel.Call<string>("requestTezosOperation", destination, $"{amount}", entryPoint, arg, networkName, networkRPC));
		}

		public void RequestTezosSignPayload(int signingType, string payload)
		{
			_beaconDAppViewModel.Call<string>("requestTezosSignPayload", signingType, payload);
		}

		public void RequestTezosBroadcast(string signedTransaction, string networkName = "", string networkRPC = "")
		{
			Debug.Log(_beaconDAppViewModel.Call<string>("requestTezosBroadcast", signedTransaction, networkName, networkRPC));
		}

		public void DisconnectAccount()
		{
			_beaconDAppViewModel.Call("stopBeacon");
		}

		public void SwitchAccounts()
		{
			throw new System.NotImplementedException();
		}

		public void Reset()
		{
			_beaconDAppViewModel.Call("stopBeacon");
		}

		public void TestString(string str)
		{
			throw new System.NotImplementedException();
		}

		public void Deeplink()
		{
			Application.OpenURL($"tezos://?type=tzip10&data={_beaconDAppViewModel.Call<string>("dlPair")}");
		}

		private void CallbackToQR()
		{
			_qrCodeView.SetQrCode(_androidCallbacks.PairResult);
		}
	}
}
#endif
